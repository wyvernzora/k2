apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-sonarr-depl-c87d4ea4
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: media-sonarr-depl-c8f329fb
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: media-sonarr-depl-c8f329fb
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - roxy
      automountServiceAccountToken: false
      containers:
        - env:
            - name: PUID
              value: "3000"
            - name: PGID
              value: "2001"
            - name: TZ
              value: America/Los_Angeles
          image: quay.io/linuxserver.io/sonarr:4.0.12
          imagePullPolicy: Always
          name: main
          ports:
            - containerPort: 8989
              name: http
          resources:
            limits:
              cpu: 2000m
              ephemeral-storage: 10Gi
              memory: 4096Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          volumeMounts:
            - mountPath: /config
              name: pvc-media-sonarr-depl-vol-appdata-pvc-c844ea8d
            - mountPath: /mnt/anime
              name: blk-vol-anime
            - mountPath: /config/Backups
              name: eph-vol-backups
            - mountPath: /config/logs
              name: eph-vol-logs
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-media-sonarr-depl-vol-appdata-pvc-c844ea8d
          persistentVolumeClaim:
            claimName: media-sonarr-depl-vol-appdata-pvc-c844ea8d
            readOnly: false
        - name: blk-vol-anime
          nfs:
            path: /mnt/data/media/anime/series
            server: 10.10.8.1
        - emptyDir: {}
          name: eph-vol-backups
        - emptyDir: {}
          name: eph-vol-logs
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-sonarr-depl-vol-appdata-pvc-c844ea8d
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
  storageClassName: longhorn
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
spec:
  externalIPs: []
  ports:
    - port: 80
      targetPort: 8989
  selector:
    cdk8s.io/metadata.addr: media-sonarr-depl-c8f329fb
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: k2-auth-authelia@kubernetescrd
  name: media-sonarr-ingress-c8028a46
spec:
  rules:
    - host: media.wyvernzora.io
      http:
        paths:
          - backend:
              service:
                name: sonarr
                port:
                  number: 80
            path: /sonarr
            pathType: Prefix
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-kavita-depl-c89cc182
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: media-kavita-depl-c8d9faa4
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: media-kavita-depl-c8d9faa4
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - roxy
      automountServiceAccountToken: false
      containers:
        - env:
            - name: PUID
              value: "3000"
            - name: PGID
              value: "2001"
            - name: TZ
              value: America/Los_Angeles
          image: linuxserver/kavita:0.8.4
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - wget
                - -qO
                - /dev/null
                - http://127.0.0.1:5000
            failureThreshold: 3
          name: kavita
          ports:
            - containerPort: 5000
              name: http
          readinessProbe:
            exec:
              command:
                - wget
                - -qO
                - /dev/null
                - http://127.0.0.1:5000
            failureThreshold: 3
          resources:
            limits:
              cpu: 2000m
              ephemeral-storage: 10Gi
              memory: 4096Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          volumeMounts:
            - mountPath: /config
              name: pvc-media-kavita-depl-vol-appdata-pvc-c8a8ac1e
            - mountPath: /library
              name: blk-vol-library
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-media-kavita-depl-vol-appdata-pvc-c8a8ac1e
          persistentVolumeClaim:
            claimName: media-kavita-depl-vol-appdata-pvc-c8a8ac1e
            readOnly: false
        - name: blk-vol-library
          nfs:
            path: /mnt/data/media/manga/library
            server: 10.10.8.1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-kavita-depl-vol-appdata-pvc-c8a8ac1e
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: kavita
spec:
  externalIPs: []
  ports:
    - port: 80
      targetPort: 5000
  selector:
    cdk8s.io/metadata.addr: media-kavita-depl-c8d9faa4
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: k2-auth-authelia@kubernetescrd
  name: media-kavita-ingress-c8169fbf
spec:
  rules:
    - host: media.wyvernzora.io
      http:
        paths:
          - backend:
              service:
                name: kavita
                port:
                  number: 80
            path: /kavita
            pathType: Prefix
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-qbit-depl-c81776b5
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: media-qbit-depl-c8bfd928
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: media-qbit-depl-c8bfd928
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - roxy
              - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - roxy
      automountServiceAccountToken: false
      containers:
        - env:
            - name: PUID
              value: "3000"
            - name: PGID
              value: "2001"
            - name: TZ
              value: America/Los_Angeles
            - name: WEBUI_PORTS
              value: 8080/tcp
          image: lscr.io/linuxserver/qbittorrent:4.6.7
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - wget
                - -qO
                - /dev/null
                - http://127.0.0.1:8080
            failureThreshold: 3
          name: qbittorrent
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            exec:
              command:
                - wget
                - -qO
                - /dev/null
                - http://127.0.0.1:8080
            failureThreshold: 3
          resources:
            limits:
              cpu: 1000m
              ephemeral-storage: 8Gi
              memory: 4096Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          volumeMounts:
            - mountPath: /downloads/default
              name: blk-vol-default
            - mountPath: /downloads/anime
              name: blk-vol-anime
            - mountPath: /config
              name: pvc-media-qbit-depl-vol-appdata-pvc-c865d717
              subPath: qbittorrent
        - env:
            - name: FLOOD_OPTION_AUTH
              value: none
            - name: FLOOD_OPTION_QBURL
              value: http://127.0.0.1:8080
            - name: FLOOD_OPTION_QBUSER
              value: dummy
            - name: FLOOD_OPTION_QBPASS
              value: dummy
            - name: FLOOD_OPTION_RUNDIR
              value: /config
            - name: FLOOD_OPTION_ALLOWEDPATH
              value: /downloads
          image: jesec/flood:4.9.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
          name: floodui
          ports:
            - containerPort: 3000
              name: http
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
          resources:
            limits:
              cpu: 1500m
              memory: 2048Mi
            requests:
              cpu: 1000m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 2001
            runAsNonRoot: true
            runAsUser: 3000
          volumeMounts:
            - mountPath: /downloads/default
              name: blk-vol-default
            - mountPath: /downloads/anime
              name: blk-vol-anime
            - mountPath: /config
              name: pvc-media-qbit-depl-vol-appdata-pvc-c865d717
              subPath: flood
      dnsPolicy: ClusterFirst
      hostNetwork: false
      initContainers:
        - command:
            - sh
            - /init/init.sh
          image: busybox
          imagePullPolicy: Always
          name: init-appdata
          resources:
            limits:
              cpu: 1500m
              memory: 2048Mi
            requests:
              cpu: 1000m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
          volumeMounts:
            - mountPath: /config
              name: pvc-media-qbit-depl-vol-appdata-pvc-c865d717
            - mountPath: /init
              name: configmap-media-qbit-depl-cm-init-c82356b0
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: blk-vol-default
          nfs:
            path: /mnt/data/downloads
            server: 10.10.8.1
        - name: blk-vol-anime
          nfs:
            path: /mnt/data/media/anime
            server: 10.10.8.1
        - name: pvc-media-qbit-depl-vol-appdata-pvc-c865d717
          persistentVolumeClaim:
            claimName: media-qbit-depl-vol-appdata-pvc-c865d717
            readOnly: false
        - configMap:
            name: media-qbit-depl-cm-init-c82356b0
          name: configmap-media-qbit-depl-cm-init-c82356b0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-qbit-depl-vol-appdata-pvc-c865d717
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
  storageClassName: longhorn
  volumeMode: Filesystem
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: media-qbit-depl-cm-init-c82356b0
data:
  init.sh: |-
    #!/bin/sh
    set -exv

    # Create config directories
    mkdir -p /config/qbittorrent
    mkdir -p /config/flood

    # Initialize default qBittorrent configuration
    if [ ! -f "/config/qbittorrent/qBittorrent/qBittorrent.conf" ]; then
      echo "qBittorrent configuration not found; initializing a default one"
      mkdir -p /config/qbittorrent/qBittorrent
      cp /init/qbittorrent.conf /config/qbittorrent/qBittorrent/qBittorrent.conf
    fi

    # Set up permissions
    chown -R 3000:2001 /config
  qbittorrent.conf: |-
    [Preferences]
    WebUI\Address=0.0.0.0
    WebUI\Port=8080
    WebUI\HostHeaderValidation=false
    WebUI\LocalHostAuth=false
immutable: false
---
apiVersion: v1
kind: Service
metadata:
  name: flood
spec:
  externalIPs: []
  ports:
    - port: 80
      targetPort: 3000
  selector:
    cdk8s.io/metadata.addr: media-qbit-depl-c8bfd928
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: qbittorrent
spec:
  externalIPs: []
  ports:
    - port: 80
      targetPort: 8080
  selector:
    cdk8s.io/metadata.addr: media-qbit-depl-c8bfd928
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: k2-auth-authelia@kubernetescrd
  name: media-qbit-ingr-c86a809e
spec:
  rules:
    - host: dl.wyvernzora.io
      http:
        paths:
          - backend:
              service:
                name: flood
                port:
                  number: 80
            path: /
            pathType: Prefix
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-prowlarr-depl-c828b76f
spec:
  minReadySeconds: 0
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      cdk8s.io/metadata.addr: media-prowlarr-depl-c8bd77f7
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cdk8s.io/metadata.addr: media-prowlarr-depl-c8bd77f7
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: PUID
              value: "3000"
            - name: PGID
              value: "2001"
            - name: TZ
              value: America/Los_Angeles
          image: linuxserver/prowlarr:1.29.2
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - wget
                - -qO
                - /dev/null
                - http://127.0.0.1:9696
            failureThreshold: 3
          name: prowlarr
          ports:
            - containerPort: 9696
              name: http
          readinessProbe:
            exec:
              command:
                - wget
                - -qO
                - /dev/null
                - http://127.0.0.1:9696
            failureThreshold: 3
          resources:
            limits:
              cpu: 1000m
              ephemeral-storage: 8Gi
              memory: 4096Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          volumeMounts:
            - mountPath: /config
              name: pvc-media-prowlarr-depl-vol-appdata-pvc-c88a3d31
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      securityContext:
        fsGroupChangePolicy: Always
        runAsNonRoot: true
      setHostnameAsFQDN: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: pvc-media-prowlarr-depl-vol-appdata-pvc-c88a3d31
          persistentVolumeClaim:
            claimName: media-prowlarr-depl-vol-appdata-pvc-c88a3d31
            readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-prowlarr-depl-vol-appdata-pvc-c88a3d31
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
  storageClassName: longhorn
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: prowlarr
spec:
  externalIPs: []
  ports:
    - port: 80
      targetPort: 9696
  selector:
    cdk8s.io/metadata.addr: media-prowlarr-depl-c8bd77f7
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: k2-auth-authelia@kubernetescrd
  name: media-prowlarr-ingress-c8f444b5
spec:
  rules:
    - host: media.wyvernzora.io
      http:
        paths:
          - backend:
              service:
                name: prowlarr
                port:
                  number: 80
            path: /prowlarr
            pathType: Prefix
