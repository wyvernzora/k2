name: Build

permissions:
  contents: write
  packages: write

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # 1) Detect changes such that we can work out which build steps need to run
  detect-changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      run-k2-build: ${{ steps.filter.outputs.run-k2-build }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Detect changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            run-k2-build:
              - 'build/**'
              - 'Earthfile'
              - '.github/workflows/**'
      - name: Debug filter output
        run: |
          echo "STEP-LEVEL run-k2-build = ${{ steps.filter.outputs.run-k2-build }}"

  # 2) Build and push the k2-build image, if anything changed
  k2-build:
    name: Build k2-build image
    needs: detect-changes
    if: needs.detect-changes.outputs.run-k2-build == 'true'
    runs-on: ubuntu-latest
    concurrency:
      group: k2-build-${{ github.ref }}
      cancel-in-progress: true
    env:
      BUILDER_IMAGE_REPO: ghcr.io/wyvernzora/k2-build
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup earthly
        uses: earthly/actions-setup@v1

      - name: Build the k2-build image
        run: earthly +build-image

      - name: Tag & push :sha
        shell: bash
        run: |
          SHA=${GITHUB_SHA:0:7}
          echo "Pushing ${BUILDER_IMAGE_REPO}:$SHA"
          docker tag "${BUILDER_IMAGE_REPO}:latest" "${BUILDER_IMAGE_REPO}:$SHA"
          docker push "${BUILDER_IMAGE_REPO}:$SHA"

      - name: Tag & push :latest
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        shell: bash
        run: |
          echo "Pushing ${BUILDER_IMAGE_REPO}:latest"
          docker push "${BUILDER_IMAGE_REPO}:latest"

  # 3) Build Kubernetes deployment manifests
  manifests:
    name: Build k8s deployment manifests
    needs: k2-build
    if: always() && !failure() && !cancelled()
    runs-on: ubuntu-latest
    concurrency:
      group: build-manifests-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup earthly
        uses: earthly/actions-setup@v1

      - name: Run manifest build
        env:
          RUN_K2_BUILD: ${{ needs.k2-build.result == 'success' }}
        run: |
          TAG_OPT=""
          SHORT_SHA=${GITHUB_SHA:0:7}

          # On PR builds where the k2-build image changed, use the short-SHA
          if [ "$GITHUB_EVENT_NAME" = "pull_request" ] && [ "$RUN_K2_BUILD" = "true" ]; then
            echo "⚙️  Using custom build-image TAG=${SHORT_SHA} for PR test"
            TAG_OPT="--TAG=$SHORT_SHA"
          fi

          earthly +crd-constructs $TAG_OPT
          earthly +k8s-manifests $TAG_OPT

      - name: Push to deploy branch
        uses: s0/git-publish-subdir-action@v2.6.0
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          REPO: self
          BRANCH: deploy
          FOLDER: deploy
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SKIP_EMPTY_COMMITS: true
