apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: authelia
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: authelia
    app.kubernetes.io/version: 4.37.5
    helm.sh/chart: authelia-0.8.58
  name: authelia
  namespace: k2-auth
data:
  configuration.yaml: "---\ntheme: light\ndefault_redirection_url: https://h.wyvernzora.io\ndefault_2fa_method: ''\nserver:\n  host: 0.0.0.0\n  port: 9091\n  asset_path: ''\n  headers:\n    csp_template: ''\n  buffers:\n    read: 4096\n    write: 4096\n  timeouts:\n    read: 6s\n    write: 6s\n    idle: 30s\n  enable_pprof: false\n  enable_expvars: false\nlog:\n  level: info\n  format: text\n  file_path: ''\n  keep_stdout: true\ntotp:\n  disable: false\n  issuer: wyvernzora.io\n  algorithm: sha1\n  digits: 6\n  period: 30\n  skew: 1\n  secret_size: 32\nwebauthn:\n  disable: false\n  display_name: Authelia\n  attestation_conveyance_preference: indirect\n  user_verification: preferred\n  timeout: 60s\nntp:\n  address: time.cloudflare.com:123\n  version: 4\n  max_desync: 3s\n  disable_startup_check: false\n  disable_failure: false\nauthentication_backend:\n  password_reset:\n    disable: false\n    custom_url: ''\n  ldap:\n    implementation: custom\n    url: ldap://glauth.k2-auth.svc.cluster.local\n    timeout: 5s\n    start_tls: false\n    tls:\n      server_name: 'ldap.wyvernzora.io'\n      skip_verify: false\n      minimum_version: TLS1.2\n      maximum_version: TLS1.3\n    base_dn: dc=wyvernzora,dc=io\n    additional_users_dn: ou=users\n    users_filter: (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=posixAccount))\n    additional_groups_dn: ou=groups\n    groups_filter: (&(memberUid={username})(objectClass=posixGroup))\n    permit_referrals: false\n    permit_unauthenticated_bind: false\n    permit_feature_detection_failure: false\n    user: cn=authelia,dc=wyvernzora,dc=io\npassword_policy:\n  standard:\n    enabled: false\n    min_length: 8\n    max_length: 0\n    require_uppercase: true\n    require_lowercase: true\n    require_number: true\n    require_special: true\n  zxcvbn:\n    enabled: false\n    min_score: 0\nsession:\n  name: 'authelia_session'\n  domain: 'wyvernzora.io'\n  same_site: 'lax'\n  expiration: 1h\n  inactivity: 5m\n  remember_me_duration: 1M\nregulation: \n  ban_time: 5m\n  find_time: 2m\n  max_retries: 3\nstorage:\n  local:\n    path: /var/authelia/db.sqlite3\nnotifier:\n  disable_startup_check: false\n  filesystem:\n    filename: /var/authelia/notifications.log\naccess_control:\n  default_policy: one_factor\n  networks: \n  - name: private\n    networks:\n    - 10.0.0.0/8\n    - 172.16.0.0/12\n    - 192.168.0.0/16\n...\n"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: authelia
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: authelia
    app.kubernetes.io/version: 4.37.5
    helm.sh/chart: authelia-0.8.58
  name: authelia
  namespace: k2-auth
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/instance: authelia
    app.kubernetes.io/name: authelia
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: authelia
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: authelia
    app.kubernetes.io/version: 4.37.5
    helm.sh/chart: authelia-0.8.58
  name: authelia
  namespace: k2-auth
spec:
  minReadySeconds: 0
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/instance: authelia
      app.kubernetes.io/name: authelia
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 24b0e554f9bfdc07d893ae12103ed5d37faa34ebb05dfb771da70bd48bd4bd6e
      labels:
        app.kubernetes.io/instance: authelia
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: authelia
        app.kubernetes.io/version: 4.37.5
        helm.sh/chart: authelia-0.8.58
    spec:
      affinity:
        nodeAffinity: {}
        podAffinity: {}
        podAntiAffinity: {}
      containers:
        - args:
            - --config=/configuration.yaml
          command:
            - authelia
          env:
            - name: AUTHELIA_SERVER_DISABLE_HEALTHCHECK
              value: "true"
            - name: AUTHELIA_JWT_SECRET_FILE
              value: /secrets/JWT_TOKEN
            - name: AUTHELIA_SESSION_SECRET_FILE
              value: /secrets/SESSION_ENCRYPTION_KEY
            - name: AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD_FILE
              value: /secrets/LDAP_PASSWORD
            - name: AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE
              value: /secrets/STORAGE_ENCRYPTION_KEY
          image: ghcr.io/authelia/authelia:4.37.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: authelia
          ports:
            - containerPort: 9091
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits: {}
            requests: {}
          startupProbe:
            failureThreshold: 6
            httpGet:
              path: /api/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /configuration.yaml
              name: config
              readOnly: true
              subPath: configuration.yaml
            - mountPath: /secrets
              name: secrets
              readOnly: true
            - mountPath: /var/authelia
              name: ephemeral
      enableServiceLinks: false
      hostIPC: false
      hostNetwork: false
      hostPID: false
      volumes:
        - configMap:
            items:
              - key: configuration.yaml
                path: configuration.yaml
            name: authelia
          name: config
        - name: secrets
          secret:
            items:
              - key: JWT_TOKEN
                path: JWT_TOKEN
              - key: SESSION_ENCRYPTION_KEY
                path: SESSION_ENCRYPTION_KEY
              - key: STORAGE_ENCRYPTION_KEY
                path: STORAGE_ENCRYPTION_KEY
              - key: LDAP_PASSWORD
                path: LDAP_PASSWORD
            secretName: authelia
        - emptyDir: {}
          name: ephemeral
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/instance: authelia
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: authelia
    app.kubernetes.io/version: 4.37.5
    helm.sh/chart: authelia-0.8.58
  name: authelia
  namespace: k2-auth
spec:
  rules:
    - host: auth.wyvernzora.io
      http:
        paths:
          - backend:
              service:
                name: authelia
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - auth.wyvernzora.io
      secretName: authelia-tls
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: authelia
  namespace: k2-auth
spec:
  itemPath: vaults/zfsyjjcwge4w4gw6dh4zaqndhq/items/ejfcz3g4s6wsr2jtct6hs3alxi
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: authelia
  namespace: k2-auth
spec:
  forwardAuth:
    address: http://authelia.k2-auth.svc.cluster.local/api/verify?rd=https%3A%2F%2Fauth.wyvernzora.io%2F
    authResponseHeaders:
      - Remote-User
      - Remote-Groups
      - Remote-Email
      - Remote-Name
